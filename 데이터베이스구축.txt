1. 스키마
 1) 외부 스키마(서브스키마)
    - 사용자 관점의 스키마 -> 하나의 DB에 여러 개의 외부 스키마 존재
    - 사용자, 프로그램 마다 다양한 형태의 논리적 구조로 존재
 2) 개념 스키마
    - 사용자와 DB 관리자 관점의 스키마 / DB의 전체적인 논리적 구조
    - 일반적으로 하나의 DB에는 하나의 개념 스키마가 존재
    -> 데이터 개체/관계/제약조건/접근권한/무결성 규칙 명세
 3) 내부스키마
    - DB설계자/개발자 관점의 스키마
    - 개념 스키마를 물리적 저장장치에 구현하는 방법을 정의
 -> 물리적 구조 / 내부 레코드의 물리적 순서

2.데이터 독립성
 1) 논리적 독립성 : 응용 프로그램 영향없이 데이터베이스 논리 구조 변경
 2) 물리적 독립성 : 응용 프로그램 및 논리 구조 영향없이 데이터의 물리적 구조 변경

3. 데이터 언어
 1) DDL(Data Defintion Language)
    - 데이터베이스 구조/제약 조건의 정의
 2) DML(Data Manopulation ~ )
    - 데이터 처리/조작에 사용되는 언어
 3) DCL(Data Control ~ )
    - 데이터의 보안, 권한, 무결성, 권한 검사, 병행 제어를 위한 언어

4. 데이터베이스 설계 순서 (순서중요)
 1) 요구조건 분석
    - 데이터베이스의 사용 용도 / 요구사항 / 요구 조건 명세서 작성
 2) 개념적 모델
    - 현실 세계의 인식을 추상적 개념 세계로 표현
    - 독립적인 개념 스키마 모델링 / 트랜잭션 모델링 / E-R모델
 3) 논리적 모델
    - 개념적 모델을 컴퓨터가 처리할 수 있는 구조로 표현(관계 모델)
    - 종속적인 논리 스키마 설계 / 트랜잭션 인터페이스 설계 / 정규화
    - 논리적 데이터 베이스 구조로 Mapping / 스키마의 평가 및 정제
 4) 물리적 모델
    - 데이터의 실제 저장 방법 및 접근 경로 표현(레코드 형식/순서)
    - 목표 DBMS 종속적인 물리적 구조 데이터로 변환 / 반정규화
    - 오브젝트, 접근방법, 인덱스, 뷰 용량 설계 / 트랜잭션 작성
    -> 저장 레코드의 형식/순서/접근 경로 설계
 5) 구현
    - DBMS에서 SQL로 작성한 명령문 실행 후 데이터베이스 실제 생성
* 데이터 모델링 : 현실 내 복잡한 데이터 구조를 단순/추상화하여 체계적으로 표현





